package org.svip.generators.generators;

import org.svip.generators.utils.Debug;

/**
 * File: License.java
 * <p>
 * License is responsible for storing and parsing license information using {@code LicenseManager} into SPDX short
 * format.
 * </p>
 * @author Ian Dunn
 */
public class License {

    //#region Attributes

    /**
     * The full name of the license
     */
    private final String licenseName;

    /**
     * The SPDX short format of the license (if one exists). Generated by {@code LicenseManager}
     */
    private String spdxLicense;

    /**
     * An optional license URL to provide more detail.
     */
    private String url;

    //#endregion

    //#region Constructors

    /**
     * Creates a new license with a full name and short format. If no short format can be found, it will be set to null.
     *
     * @param licenseName The full name of the license.
     */
    public License(String licenseName) {
        this.licenseName = licenseName;

        this.spdxLicense = LicenseManager.parseLicense(this.licenseName);
        Debug.log(Debug.LOG_TYPE.DEBUG, String.format("LicenseManager: License parsed from \"%s\" to \"%s\"",
                this.licenseName, this.spdxLicense));
    }

    //endregion

    //#region Getters

    public String getLicenseName() {
        return licenseName;
    }

    public String getSpdxLicense() {
        return spdxLicense;
    }

    public String getUrl() {
        return url;
    }

    //#endregion

    //#region Setters

    public License setSpdxLicense(String spdxLicense) {
        this.spdxLicense = spdxLicense;
        return this;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    //#endregion

    //#region Overrides

    @Override
    public String toString() {
        if(spdxLicense == null)
            return licenseName;
        return spdxLicense;
    }

    //#endregion

}
