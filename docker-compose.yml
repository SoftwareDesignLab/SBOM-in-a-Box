#
# File: docker-compose.yml
# Builds and deploys two Docker containers: a MySQL server and the SVIP API from ./Dockerfile.
# Uses ./.env for MySQL/networking configuration.
#
# Author: Ian Dunn
#

services:

  # OSI container
  osi:
    container_name: svip-osi
    build: core/src/main/java/org/svip/generation/osi/docker
    restart: unless-stopped
    ports:
      - ${FLASK_LOCAL_PORT}:${FLASK_DOCKER_PORT}
    volumes:
      - ./core/src/main/java/org/svip/generation/osi/bound_dir/code:/bound_dir/code
      - ./core/src/main/java/org/svip/generation/osi/bound_dir/sboms:/bound_dir/sboms

  # MySQL server
  mysql:
    container_name: svip-mysql
    platform: linux/amd64
    image: mysql:5
    command: --max_allowed_packet=32505856 # Set max_allowed_packet to 256M
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - ${MYSQL_LOCAL_PORT}:${MYSQL_DOCKER_PORT}
    volumes: # Stores mysql data in a persistent volume to persist across container restarts
      - db:/var/lib/mysql
    healthcheck: # How to determine it's safe to start the api container. Pings the MySQL server until it has a response
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$MYSQL_ROOT_PASSWORD' ]
      interval: 10s # Wait in case of the first build, server restarts once mid-way through to init
      timeout: 2s

  # SVIP API spring-boot application
  api:
    container_name: svip-api
    depends_on: # Start mysql server before starting API
      mysql:
        condition: service_healthy # Only start once the health check has passed
      osi:
        condition: service_started # Only start once the OSI container has been started
    build: .    # Build from Dockerfile located in root directory
    restart: on-failure
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
    volumes:
      - .m2:/root/.m2
      - /var/run/docker.sock:/var/run/docker.sock
      - ./core/src/main/java/org/svip/generation/osi/bound_dir/code:/core/src/main/java/org/svip/generation/osi/bound_dir/code
      - ./core/src/main/java/org/svip/generation/osi/bound_dir/sboms:/core/src/main/java/org/svip/generation/osi/bound_dir/sboms
    stdin_open: true
    tty: true
    environment: # Define environment variables for spring-boot application.properties
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_LOCAL_PORT=${MYSQL_LOCAL_PORT}
      - SPRING_DOCKER_PORT=${SPRING_DOCKER_PORT}

volumes:
  db: # Volume to store persistent data from MySQL server
  code: # Volume to link osi bound_dir/code with api bound_dir/code
    driver: local
    driver_opts:
      type: none
      device: ./core/src/main/java/org/svip/generation/osi/bound_dir/code
      o: bind
  sboms: # Volume to link osi bound_dir/sboms with api bound_dir/sboms
    driver: local
    driver_opts:
      type: none
      device: ./core/src/main/java/org/svip/generation/osi/bound_dir/sboms
      o: bind